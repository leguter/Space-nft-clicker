import { useState, useEffect } from "react";
import api from "../../utils/api";
import styles from "./DepositPage.module.css";

export default function DepositPage() {
  const [loading, setLoading] = useState(false);
  const [selected, setSelected] = useState(null);
  const [message, setMessage] = useState("");
  const [balance, setBalance] = useState(0); // ‚Üê –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å

  const depositOptions = [
    { amount: 10, bonus: 0 },
    { amount: 50, bonus: 0 },
    { amount: 100, bonus: 20 },
    { amount: 500, bonus: 100 },
    { amount: 1000, bonus: 300 },
  ];

  // === –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Telegram WebApp ===
  useEffect(() => {
    if (window.Telegram?.WebApp) {
      const tg = window.Telegram.WebApp;
      tg.ready();

      // –°–ª—É—Ö–∞—á –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É
      tg.onEvent("invoiceClosed", async (status) => {
        console.log("Invoice closed:", status);

        if (status === "paid") {
          setMessage("‚úÖ –û–ø–ª–∞—Ç–∞ —É—Å–ø—ñ—à–Ω–∞! –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å...");
          try {
            const res = await api.get("/api/user/me"); // <-- —Ç–≤—ñ–π –±–µ–∫ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–Ω–æ–≤–ª–µ–Ω–æ–≥–æ —é–∑–µ—Ä–∞
            if (res.data?.user) {
              setBalance(res.data.user.internal_stars); // <-- –æ–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å
              setMessage("üí∞ –ë–∞–ª–∞–Ω—Å –æ–Ω–æ–≤–ª–µ–Ω–æ!");
            }
          } catch (e) {
            console.error("Balance update error:", e);
            setMessage("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –±–∞–ª–∞–Ω—Å");
          }
        } else if (status === "cancelled") {
          setMessage("‚ùå –û–ø–ª–∞—Ç—É —Å–∫–∞—Å–æ–≤–∞–Ω–æ.");
        } else if (status === "failed") {
          setMessage("üíÄ –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –æ–ø–ª–∞—Ç–∏.");
        }
      });
    }

    // –ü—Ä–∏ –≤–∏—Ö–æ–¥—ñ ‚Äî —á–∏—Å—Ç–∏–º–æ —Å–ª—É—Ö–∞—á
    return () => {
      if (window.Telegram?.WebApp) {
        window.Telegram.WebApp.offEvent("invoiceClosed");
      }
    };
  }, []);

  // === –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–≤–æ–π—Å—É ===
  const handleDeposit = async (amount) => {
    try {
      setLoading(true);
      setSelected(amount);
      setMessage("");

      const res = await api.post("/api/deposit/create_invoice", { amount });

      if (res.data?.success && res.data.invoice_link) {
        if (window.Telegram?.WebApp) {
          // üî• –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –æ–ø–ª–∞—Ç—É —Å–∞–º–µ —É Telegram WebApp, –Ω–µ —É –±—Ä–∞—É–∑–µ—Ä—ñ
          window.Telegram.WebApp.openInvoice(res.data.invoice_link);
          setMessage("üí≥ –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –æ–ø–ª–∞—Ç—É —É Telegram...");
        } else {
          // fallback –¥–ª—è –≤–µ–±–≤–µ—Ä—Å—ñ—ó (—è–∫—â–æ —Ç–µ—Å—Ç—É—î—à —É –±—Ä–∞—É–∑–µ—Ä—ñ)
          window.open(res.data.invoice_link, "_blank");
          setMessage("–í—ñ–¥–∫—Ä–∏—Ç–æ —É –Ω–æ–≤–æ–º—É –≤—ñ–∫–Ω—ñ ‚úÖ");
        }
      } else {
        setMessage("–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ —ñ–Ω–≤–æ–π—Å üòï");
      }
    } catch (err) {
      console.error("Deposit error:", err);
      setMessage("–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–≤–æ–π—Å—É");
    } finally {
      setLoading(false);
    }
  };

  // === –ü–æ—á–∞—Ç–∫–æ–≤–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å—É ===
  useEffect(() => {
    (async () => {
      try {
        const res = await api.get("/api/user/me");
        if (res.data?.user) {
          setBalance(res.data.user.internal_stars || 0);
        }
      } catch (e) {
        console.error("Load balance error:", e);
      }
    })();
  }, []);

  return (
    <div className={styles.Container}>
      <h2 className={styles.Title}>üí∞ Deposit Stars</h2>
      <p className={styles.Subtitle}>–¢–≤—ñ–π –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å: {balance} ‚≠ê</p>

      <div className={styles.ButtonGrid}>
        {depositOptions.map(({ amount, bonus }) => (
          <button
            key={amount}
            className={`${styles.DepositButton} ${
              selected === amount ? styles.Active : ""
            }`}
            onClick={() => handleDeposit(amount)}
            disabled={loading}
          >
            <div className={styles.Amount}>{amount} ‚≠ê</div>
            {bonus > 0 && <div className={styles.Bonus}>+{bonus} –±–æ–Ω—É—Å</div>}
          </button>
        ))}
      </div>

      {message && <p className={styles.Message}>{message}</p>}
    </div>
  );
}
