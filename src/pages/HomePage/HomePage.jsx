// import { useState } from "react";
// import { useOutletContext } from "react-router-dom";
// // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Å—Ç–∏–ª—ñ —è–∫ –æ–±'—î–∫—Ç `styles`
// import styles from "./HomePage.module.css";
// // –Ü–∫–æ–Ω–∫–∏ –¥–ª—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
// import { FaUserCircle } from "react-icons/fa"; // npm install react-icons
// import { FiZap } from "react-icons/fi";
// import { Link } from "react-router-dom";
// import TapButton from "../../components/TapButton/TapButton";
// export default function HomePage() {
//    const { balance, progress, isTapped, handleTap, tapPower } = useOutletContext();
//   //  console.log(tapPower)
//      const [floatingNumbers, setFloatingNumbers] = useState([]);
//   // –î–ª—è –ø—Ä–∏–∫–ª–∞–¥—É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π —Å—Ç–∞–Ω, –∞–ª–µ —Ü—ñ –¥–∞–Ω—ñ –º–∞—é—Ç—å –ø—Ä–∏—Ö–æ–¥–∏—Ç–∏ –∑–∑–æ–≤–Ω—ñ
//   // const [balance, setBalance] = useState(1245678);
//   // const [progress, setProgress] = useState(0.75); // 75% –ø—Ä–æ–≥—Ä–µ—Å—É
//   // const [isTapped, setIsTapped] = useState(false);
//   // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è
//   // const handleTap = () => {
//   //   // 1. –ê–Ω—ñ–º–∞—Ü—ñ—è
//   //   setIsTapped(true);
//   //   setTimeout(() => setIsTapped(false), 150);

//   //   // 2. –õ–æ–≥—ñ–∫–∞ (–∑–±—ñ–ª—å—à–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É, —Ç–æ—â–æ)
//   //   setBalance((prevBalance) => prevBalance + 1);
//   //   // –¢—É—Ç –≤–∏ –± –≤–∏–∫–ª–∏–∫–∞–ª–∏ —Ñ—É–Ω–∫—Ü—ñ—é, –ø–µ—Ä–µ–¥–∞–Ω—É —á–µ—Ä–µ–∑ –ø—Ä–æ–ø—Å–∏
//   //   // onTap();
//   // };
// const handleTapWithAnimation = (e) => {
//     // 1. –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
//     handleTap();

//     // 2. –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –æ–±'—î–∫—Ç –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
//     const newNumber = {
//       id: Date.now(),
//       value: tapPower, // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–∏–Ω–∞–º—ñ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
//       x: e.clientX,     // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –∫–ª—ñ–∫—É
//       y: e.clientY,
//     };

//     // 3. –î–æ–¥–∞—î–º–æ –π–æ–≥–æ –≤ –º–∞—Å–∏–≤ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä—É
//     setFloatingNumbers((current) => [...current, newNumber]);

//     // 4. –í–∏–¥–∞–ª—è—î–º–æ –π–æ–≥–æ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É (—Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –∞–Ω—ñ–º–∞—Ü—ñ—ó)
//     setTimeout(() => {
//       setFloatingNumbers((current) => current.filter((num) => num.id !== newNumber.id));
//     }, 1000);
//   };
//   return (
//     <div className={styles.container}>
//       <div className={styles.Card}>
//         {/* -- –•–ï–î–ï–† -- */}
//         <header className={styles.header}>
//           <h1 className={styles.title}>SPACE CLICKER</h1>
//           <FaUserCircle className={styles.userIcon} />
//         </header>

//         {/* -- –ë–ê–õ–ê–ù–° -- */}
//         <div className={styles.balance}>
//           {balance.toLocaleString("en-US")} ‚òÖ
//         </div>

//         {/* -- –ì–û–õ–û–í–ù–ê –ö–ù–û–ü–ö–ê -- */}
//        <TapButton isTapped={isTapped} 
//           onClick={handleTapWithAnimation}  />

//         {/* -- –ü–†–û–ì–†–ï–° –ë–ê–† -- */}
//         <div className={styles.progressSection}>
//           <span className={styles.progressLabel}>PROGRESS</span>
//           <div className={styles.progressBar}>
//             <div
//               className={styles.progressFill}
//               style={{ width: `${progress * 100}%` }}
//             ></div>
//           </div>
//         </div>

//         {/* -- –ö–ù–û–ü–ö–ê –ë–£–°–¢–ï–†–Ü–í -- */}
//          <Link to="/boosters" className={styles.boostersButton}>
//           <FiZap /> Boosters
//         </Link>
//       </div>
//         {floatingNumbers.map((num) => (
//         <div
//           key={num.id}
//           className={styles.floatingNumber}
//           style={{ left: `${num.x}px`, top: `${num.y}px` }}
//         >
//           +{num.value}
//         </div>
//       ))}
//     </div>
//   );
// }

import { useState } from "react";
import { useOutletContext } from "react-router-dom";
import styles from "./HomePage.module.css";
import { FaUserCircle } from "react-icons/fa";
import { FiZap } from "react-icons/fi";
import TapButton from "../../components/TapButton/TapButton";
import api from "../../utils/api";
import { Link } from "react-router-dom";
export default function HomePage() {
  const { balance, progress, isTapped, handleTap, tapPower } = useOutletContext();
  const [floatingNumbers, setFloatingNumbers] = useState([]);
  const [localProgress, setLocalProgress] = useState(progress);

  const handleTapWithAnimation = (e) => {
    handleTap();

    const newNumber = {
      id: Date.now(),
      value: tapPower,
      x: e.clientX,
      y: e.clientY,
    };

    setFloatingNumbers((current) => [...current, newNumber]);
    setTimeout(() => {
      setFloatingNumbers((current) => current.filter((num) => num.id !== newNumber.id));
    }, 1000);
  };

  const handleClaimTicket = async () => {
    try {
      const res = await api.post("/api/user/claim-ticket", {}, {
        headers: {
          Authorization: `Bearer ${localStorage.getItem("authToken")}`
        }
      });

      alert(`üéü Ticket claimed! New tickets: ${res.data.tickets}`);
      setLocalProgress(0); // —Å–∫–∏–¥–∞—î–º–æ –ø—Ä–æ–≥—Ä–µ—Å
    } catch (err) {
      alert(err.response?.data?.message || "Error claiming ticket");
    }
  };

  // –ö–æ–ª—ñ—Ä –ø—Ä–æ–≥—Ä–µ—Å—É –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –ø—Ä–æ–≥—Ä–µ—Å—É
  const progressColor = localProgress < 0.7
    ? "#00eaff"
    : localProgress < 0.95
      ? "#00ff99"
      : "#ff00ff"; // –∫–æ–ª–∏ –±–ª–∏–∑—å–∫–æ –¥–æ 100%

  return (
    <div className={styles.container}>
      <div className={styles.Card}>
        <header className={styles.header}>
          <h1 className={styles.title}>SPACE CLICKER</h1>
          <FaUserCircle className={styles.userIcon} />
        </header>

        <div className={styles.balance}>
          {balance.toLocaleString("en-US")} ‚òÖ
        </div>

        <TapButton isTapped={isTapped} onClick={handleTapWithAnimation} />

        <div 
          className={styles.progressSection} 
          onClick={() => localProgress >= 1 && handleClaimTicket()}
          style={{ cursor: localProgress >= 1 ? "pointer" : "default" }}
        >
          <span className={styles.progressLabel}>PROGRESS</span>
          <div className={styles.progressBar}>
            <div
              className={styles.progressFill}
              style={{
                width: `100%`,
                backgroundColor: progressColor,
                boxShadow: localProgress >= 0.95
                  ? `0 0 20px ${progressColor}, 0 0 40px ${progressColor}`
                  : "none",
                transition: "all 0.3s ease-in-out"
              }}
            ></div>
          </div>
        </div>
        <Link to="/boosters" className={styles.boostersButton}>
    <FiZap /> Boosters
  </Link>
      </div>
     
      {floatingNumbers.map((num) => (
        <div
          key={num.id}
          className={styles.floatingNumber}
          style={{ left: `${num.x}px`, top: `${num.y}px` }}
        >
          +{num.value}
        </div>
      ))}
   
    </div>
  );
}
