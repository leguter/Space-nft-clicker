// import { useState } from "react";
// import { Outlet, NavLink } from "react-router-dom"; // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ NavLink –¥–ª—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Å—Ç–∏–ª—ñ–≤
// import styles from "../../App.module.css";
// import { FaHome, FaGem, FaGift, FaBolt, FaUser } from "react-icons/fa";

// export default function MainLayout() {
//   // 1. –í—Å—è –ª–æ–≥—ñ–∫–∞ —Ç–µ–ø–µ—Ä –∂–∏–≤–µ —Ç—É—Ç
//  const [balance, setBalance] = useState(1245678);
//   const [progress, setProgress] = useState(0.75); // 75% –ø—Ä–æ–≥—Ä–µ—Å—É
//   const [isTapped, setIsTapped] = useState(false);
// const handleTap = () => {
//     // 1. –ê–Ω—ñ–º–∞—Ü—ñ—è
//     setIsTapped(true);
//     setTimeout(() => setIsTapped(false), 150);

//     // 2. –õ–æ–≥—ñ–∫–∞ (–∑–±—ñ–ª—å—à–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É, —Ç–æ—â–æ)
//     setBalance((prevBalance) => prevBalance + 1);
//     // –¢—É—Ç –≤–∏ –± –≤–∏–∫–ª–∏–∫–∞–ª–∏ —Ñ—É–Ω–∫—Ü—ñ—é, –ø–µ—Ä–µ–¥–∞–Ω—É —á–µ—Ä–µ–∑ –ø—Ä–æ–ø—Å–∏
//     // onTap();
//   };
// //   const onTap = () => {
// //     setBalance((prevBalance) => prevBalance + 1);
// //     setTapCount((prevTapCount) => prevTapCount + 1);
// //   };

//   return (
//     <div className={styles.appContainer}>
//       <main className={styles.mainContent}>
//         {/* 2. –ü–µ—Ä–µ–¥–∞—î–º–æ —Å—Ç–∞–Ω —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–æ—á—ñ—Ä–Ω—ñ–º —Å—Ç–æ—Ä—ñ–Ω–∫–∞–º —á–µ—Ä–µ–∑ context */}
//         <Outlet context={{ balance, progress, isTapped, handleTap }} />
//       </main>

//       {/* 3. –ù–∞—à–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è –∑ NavLink –∑–∞–º—ñ—Å—Ç—å button */}
//       <nav className={styles.bottomNav}>
//         <NavLink
//           to="/"
//           className={({ isActive }) =>
//             `${styles.navItem} ${isActive ? styles.navItemActive : ""}`
//           }
//         >
//           <FaHome />
//           <span>Home</span>
//         </NavLink>
//         <NavLink
//           to="/earn"
//           className={({ isActive }) =>
//             `${styles.navItem} ${isActive ? styles.navItemActive : ""}`
//           }
//         >
//           <FaGem />
//           <span>Earn</span>
//         </NavLink>
//         <NavLink
//           to="/raffles"
//           className={({ isActive }) =>
//             `${styles.navItem} ${isActive ? styles.navItemActive : ""}`
//           }
//         >
//           <FaGift />
//           <span>Raffles</span>
//         </NavLink>
//         <NavLink
//           to="/boosters"
//           className={({ isActive }) =>
//             `${styles.navItem} ${isActive ? styles.navItemActive : ""}`
//           }
//         >
//           <FaBolt />
//           <span>Boosters</span>
//         </NavLink>
//         <NavLink
//           to="/profile"
//           className={({ isActive }) =>
//             `${styles.navItem} ${isActive ? styles.navItemActive : ""}`
//           }
//         >
//           <FaUser />
//           <span>Profile</span>
//         </NavLink>
//       </nav>
//     </div>
//   );
// }

import { useState, useEffect } from "react";
import { Outlet, NavLink } from "react-router-dom";
import styles from "../../App.module.css";
import { FaHome, FaGem, FaGift, FaBolt, FaUser } from "react-icons/fa";
import api from '../../utils/api'
export default function MainLayout() {
  const [balance, setBalance] = useState(0);
  const [progress, setProgress] = useState(0.75);
   const [tapPower, setTapPower] = useState(0.75);
  const [isTapped, setIsTapped] = useState(false);
  // üß© 1. –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É
  useEffect(() => {
    const fetchUserData = async () => {
  try {
    const res = await api.get("/api/user/me", {
      headers: {
        "Authorization": `Bearer ${localStorage.getItem("authToken")}`
      }
    });

    // ‚úÖ Axios –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —É—Å–ø—ñ—à–Ω–∏–π –∑–∞–ø–∏—Ç (—Å—Ç–∞—Ç—É—Å 2xx)
    // ‚úÖ –î–∞–Ω—ñ –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –≤ `res.data`
    setBalance(res.data.balance); // –æ—Ç—Ä–∏–º—É—î–º–æ –±–∞–ª–∞–Ω—Å –∑ res.data
    setTapPower(res.data.tapPower);
    console.log(tapPower)

  } catch (err) {
    // ‚ùå –Ø–∫—â–æ —Å–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–º–∏–ª–∫—É (4xx, 5xx), axios –≤—ñ–¥—Ö–∏–ª—è—î –ø—Ä–æ–º—ñ—Å,
    // —ñ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å —É –±–ª–æ–∫ catch
    if (err.response) {
      // –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏–π—à–ª–∞ –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–¥—é –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞
      console.error("‚ùå Error loading user data:", err.response.data.message);
    } else {
      // –ü–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ –∞–±–æ —ñ–Ω—à–∞ –ø—Ä–æ–±–ª–µ–º–∞
      console.error("‚ùå Server error:", err.message);
    }
  }
};
    fetchUserData();
  }, []);

  // ‚ö° 2. TAP ‚Äî –∑–±—ñ–ª—å—à—É—î–º–æ –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ –±–µ–∫–µ–Ω–¥
  const handleTap = async () => {
    setIsTapped(true);

    try {
    // –î–ª—è POST-–∑–∞–ø–∏—Ç—É –∑ axios:
    // 1-–π –∞—Ä–≥—É–º–µ–Ω—Ç: URL
    // 2-–π –∞—Ä–≥—É–º–µ–Ω—Ç: —Ç—ñ–ª–æ –∑–∞–ø–∏—Ç—É (data). –Ø–∫—â–æ —Ç—ñ–ª–∞ –Ω–µ–º–∞—î, –ø–µ—Ä–µ–¥–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –æ–±'—î–∫—Ç {}
    // 3-–π –∞—Ä–≥—É–º–µ–Ω—Ç: –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è (–≤–∫–ª—é—á–Ω–æ –∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏)
    const res = await api.post(
      "/api/user/tap",
      {}, // üëà –ü–æ—Ä–æ–∂–Ω—î —Ç—ñ–ª–æ –∑–∞–ø–∏—Ç—É
      {
        headers: {
          "Authorization": `Bearer ${localStorage.getItem("authToken")}`
        }
      }
    );

    // ‚úÖ –î–∞–Ω—ñ –≤–∂–µ —Ä–æ–∑–ø–∞—Ä—Å–µ–Ω—ñ —ñ –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –≤ res.data
    setBalance(res.data.newBalance);

  } catch (err) {
    // ‚ùå Axios –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ "–ª–æ–≤–∏—Ç—å" –ø–æ–º–∏–ª–∫–∏ –∑ –∫–æ–¥–∞–º–∏ 4xx/5xx
    const errorMessage = err.response ? err.response.data.message : err.message;
    console.error("‚ùå Tap error:", errorMessage);
  } finally {
    // üí° –¶–µ–π –±–ª–æ–∫ –≤–∏–∫–æ–Ω–∞—î—Ç—å—Å—è –∑–∞–≤–∂–¥–∏ (—ñ –ø—Ä–∏ —É—Å–ø—ñ—Ö—É, —ñ –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ),
    // —â–æ –≥–∞—Ä–∞–Ω—Ç—É—î —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –∞–Ω—ñ–º–∞—Ü—ñ—ó.
    setTimeout(() => setIsTapped(false), 150);
  }
  };

  return (
    <div className={styles.appContainer}>
      <main className={styles.mainContent}>
        {/* üîÅ –ø–µ—Ä–µ–¥–∞—î–º–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç —É—Å—ñ–º —Å—Ç–æ—Ä—ñ–Ω–∫–∞–º */}
        <Outlet context={{ balance, progress, isTapped, handleTap, tapPower}} />
      </main>

      {/* üîΩ –Ω–∏–∂–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è */}
      <nav className={styles.bottomNav}>
        <NavLink
          to="/"
          className={({ isActive }) =>
            `${styles.navItem} ${isActive ? styles.navItemActive : ""}`
          }
        >
          <FaHome />
          <span>Home</span>
        </NavLink>
        <NavLink
          to="/earn"
          className={({ isActive }) =>
            `${styles.navItem} ${isActive ? styles.navItemActive : ""}`
          }
        >
          <FaGem />
          <span>Earn</span>
        </NavLink>
        <NavLink
          to="/raffles"
          className={({ isActive }) =>
            `${styles.navItem} ${isActive ? styles.navItemActive : ""}`
          }
        >
          <FaGift />
          <span>Raffles</span>
        </NavLink>
        <NavLink
          to="/boosters"
          className={({ isActive }) =>
            `${styles.navItem} ${isActive ? styles.navItemActive : ""}`
          }
        >
          <FaBolt />
          <span>Boosters</span>
        </NavLink>
        <NavLink
          to="/profile"
          className={({ isActive }) =>
            `${styles.navItem} ${isActive ? styles.navItemActive : ""}`
          }
        >
          <FaUser />
          <span>Profile</span>
        </NavLink>
      </nav>
    </div>
  );
}
