// import { useState } from "react";
// import HomePage from "./pages/HomePage/HomePage";
// import EarnPage from "./pages/EarnPage/EarnPage";
// import RafflesPage from "./pages/RafflesPage/RafflesPage";
// import BoostersPage from "./pages/BoostersPage/BoostersPage";
// import ProfilePage from "./pages/ProfilePage/ProfilePage";
// import "./App.css";
// export default function App() {
//   const [page, setPage] = useState("home");
//   const [balance, setBalance] = useState(0);
//   const [tapCount, setTapCount] = useState(0);

//   const onTap = () => {
//     setBalance((b) => b + 1);
//     setTapCount((t) => t + 1);
//   };

//   const renderPage = () => {
//     switch (page) {
//       case "home":
//         return <HomePage balance={balance} onTap={onTap} tapCount={tapCount} />;
//       case "earn":
//         return <EarnPage />;
//       case "raffles":
//         return <RafflesPage />;
//       case "boosters":
//         return <BoostersPage />;
//       case "profile":
//         return <ProfilePage balance={balance} />;
//       default:
//         return <HomePage />;
//     }
//   };

//   return (
//     <div className="parent-container">
//       <div className="your-content">
//       <div className="p-4 flex-1">{renderPage()}</div>

//       <div className="menu">
//         <button onClick={() => setPage("home")}>üè†</button>
//         <button onClick={() => setPage("earn")}>üíé</button>
//         <button onClick={() => setPage("raffles")}>üéÅ</button>
//         <button onClick={() => setPage("boosters")}>‚ö°</button>
//         <button onClick={() => setPage("profile")}>üë§</button>
//       </div>
//       </div>
//     </div>
//   );
// }
import { useState } from "react";
// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –≤–∞—à—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
import HomePage from "./pages/HomePage/HomePage";
import EarnPage from "./pages/EarnPage/EarnPage";
import RafflesPage from "./pages/RafflesPage/RafflesPage";
import BoostersPage from "./pages/BoostersPage/BoostersPage";
import ProfilePage from "./pages/ProfilePage/ProfilePage";
import { Routes, Route } from "react-router-dom";
import MainLayout from "../src/components/MainLayout/MainLayout"; // –ù–∞—à –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
import { useEffect } from "react";
// import { Routes, Route } from 'react-router-dom';
// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è App —Ç–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
// import styles from "./App.module.css";
// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —ñ–∫–æ–Ω–∫–∏
// import { FaHome, FaGem, FaGift, FaBolt, FaUser } from "react-icons/fa";

// export default function App() {
//   // 1. –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å—Ç–µ–π—Ç–∏ –¥–ª—è –±–∞–ª–∞–Ω—Å—É —Ç–∞ –∫–ª—ñ–∫—ñ–≤ –∑ –≤–∞—à–æ–≥–æ –ø–µ—Ä—à–æ–≥–æ —Ñ–∞–π–ª—É
//   const [balance, setBalance] = useState(0);
//   const [tapCount, setTapCount] = useState(0);
//   const [currentPage, setCurrentPage] = useState("home");

//   // 2. –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ª–æ–≥—ñ–∫—É –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –ø—Ä–∏ –∫–ª—ñ–∫—É
//   const onTap = () => {
//     setBalance((prevBalance) => prevBalance + 1);
//     setTapCount((prevTapCount) => prevTapCount + 1);
//   };

//   // 3. –û–Ω–æ–≤–ª—é—î–º–æ —Ä–µ–Ω–¥–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–æ–∫, –ø–µ—Ä–µ–¥–∞—é—á–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø—Ä–æ–ø—Å–∏
//   const renderPage = () => {
//     switch (currentPage) {
//       case "home":
//         // –ü–µ—Ä–µ–¥–∞—î–º–æ –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ –≤ HomePage
//         return <HomePage balance={balance} onTap={onTap} tapCount={tapCount}  />;
//       case "earn":
//         return <EarnPage />;
//       case "raffles":
//         return <RafflesPage />;
//       case "boosters":
//         return <BoostersPage />;
//       case "profile":
//         // –ü–µ—Ä–µ–¥–∞—î–º–æ –±–∞–ª–∞–Ω—Å –≤ ProfilePage
//         return <ProfilePage balance={balance} />;
//       default:
//         return <HomePage balance={balance} onTap={onTap} tapCount={tapCount} />;
//     }
//   };

//   return (
    
//     // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑—ñ —Å—Ç–∏–ª—è–º–∏ CSS Modules
//     <div className={styles.appContainer}>
       
//       {/* –†–µ–Ω–¥–µ—Ä–∏–º–æ –∞–∫—Ç–∏–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É */}
//       <main className={styles.mainContent}>{renderPage()}</main>

//       {/* –í–∞—à–∞ –∫—Ä–∞—Å–∏–≤–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è */}
//       <nav className={styles.bottomNav}>
//         <button
//           className={`${styles.navItem} ${
//             currentPage === "home" ? styles.navItemActive : ""
//           }`}
//           onClick={() => setCurrentPage("home")}
//         >
//           <FaHome />
//           <span>Home</span>
//         </button>
//         <button
//           className={`${styles.navItem} ${
//             currentPage === "earn" ? styles.navItemActive : ""
//           }`}
//           onClick={() => setCurrentPage("earn")}
//         >
//           <FaGem />
//           <span>Earn</span>
//         </button>
//         <button
//           className={`${styles.navItem} ${
//             currentPage === "raffles" ? styles.navItemActive : ""
//           }`}
//           onClick={() => setCurrentPage("raffles")}
//         >
//           <FaGift />
//           <span>Raffles</span>
//         </button>
//         <button
//           className={`${styles.navItem} ${
//             currentPage === "boosters" ? styles.navItemActive : ""
//           }`}
//           onClick={() => setCurrentPage("boosters")}
//         >
//           <FaBolt />
//           <span>Boosters</span>
//         </button>
//         <button
//           className={`${styles.navItem} ${
//             currentPage === "profile" ? styles.navItemActive : ""
//           }`}
//           onClick={() => setCurrentPage("profile")}
//         >
//           <FaUser />
//           <span>Profile</span>
//         </button>
//       </nav>
//     </div>
//   );
// }
import api from './utils/api'
import RaffleDetail from "./pages/RaffleDetail/RaffleDetail";
// import WheelPage from "./pages/WheelPage/WheelPage";
import HorizontalWheel from "./pages/HorizontalWheel/HorizontalWheel";
import { ToastContainer } from 'react-toastify';
export default function App() {
   const [userData, setUserData] = useState(null);
// let userData = null;
useEffect(() => {
  const tg = window.Telegram.WebApp;
  tg.ready();

  const waitForInitData = async () => {
    // –û—á—ñ–∫—É—î–º–æ, –ø–æ–∫–∏ Telegram –ø–µ—Ä–µ–¥–∞—Å—Ç—å initData
    let attempts = 0;
    while (!tg.initData && attempts < 10) {
      await new Promise(res => setTimeout(res, 300)); // —á–µ–∫–∞—Ç–∏ 0.3 —Å–µ–∫
      attempts++;
    }

    if (!tg.initData) {
      console.error("‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ initData –Ω–∞–≤—ñ—Ç—å –ø—ñ—Å–ª—è –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è");
      setUserData({ error: true });
      return;
    }

    try {
    console.log("üì§ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ initData:", tg.initData);

    // axios.post –ø—Ä–∏–π–º–∞—î URL, –ø–æ—Ç—ñ–º —Ç—ñ–ª–æ –∑–∞–ø–∏—Ç—É (data), –∞ –ø–æ—Ç—ñ–º –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
    const res = await api.post(
      "/api/auth",
      { initData: tg.initData } // üëà –¢—ñ–ª–æ –∑–∞–ø–∏—Ç—É –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è —è–∫ –æ–±'—î–∫—Ç
    );

    // ‚úÖ –î–∞–Ω—ñ –≤–∂–µ –≤ res.data, –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ res.ok –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–∞
    console.log("‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ userData:", res.data);
    localStorage.setItem("authToken", res.data.token);
    setUserData(res.data);

  } catch (err) {
    // ‚ùå Axios –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å —Å—é–¥–∏ –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ (—Å—Ç–∞—Ç—É—Å –Ω–µ 2xx)
    const errorMessage = err.response ? err.response.data.message : "–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó";
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:", errorMessage);
    setUserData({ error: true });
  }
};

  waitForInitData();
}, []); // –ü—É—Å—Ç–∏–π –º–∞—Å–∏–≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –æ–∑–Ω–∞—á–∞—î, —â–æ –∫–æ–¥ –≤–∏–∫–æ–Ω–∞—î—Ç—å—Å—è 1 —Ä–∞–∑
if (userData === null) {
  return <div>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>;
}

if (userData?.error) {
  return <div>–ó–∞–ø—É—Å—Ç—ñ—Ç—å –¥–æ–¥–∞—Ç–æ–∫ —á–µ—Ä–µ–∑ Telegram –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó</div>;
}
  return (
    <Routes>
      {/* –í—Å—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ç–µ–ø–µ—Ä –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ MainLayout */}
      <Route path="/" element={<MainLayout />}>
        {/* "index" –æ–∑–Ω–∞—á–∞—î, —â–æ —Ü–µ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –¥–ª—è "/" */}
        <Route index element={<HomePage />} />
        <Route path="earn" element={<EarnPage />} />
        <Route path="raffles" element={<RafflesPage user={userData} />} />
        <Route path="raffles/:id" element={<RaffleDetail />} />
        <Route path="boosters" element={<BoostersPage />} />
        <Route path="profile" element={<ProfilePage user={userData} />} />
        <Route path="/wheel" element={<HorizontalWheel />} />
      </Route>
      <ToastContainer
        theme="dark"
        position="bottom-right"
        autoClose={3000}
      />
    </Routes>
  );
}