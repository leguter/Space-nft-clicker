// import { useState } from "react";
// import HomePage from "./pages/HomePage/HomePage";
// import EarnPage from "./pages/EarnPage/EarnPage";
// import RafflesPage from "./pages/RafflesPage/RafflesPage";
// import BoostersPage from "./pages/BoostersPage/BoostersPage";
// import ProfilePage from "./pages/ProfilePage/ProfilePage";
// import "./App.css";
// export default function App() {
//   const [page, setPage] = useState("home");
//   const [balance, setBalance] = useState(0);
//   const [tapCount, setTapCount] = useState(0);

//   const onTap = () => {
//     setBalance((b) => b + 1);
//     setTapCount((t) => t + 1);
//   };

//   const renderPage = () => {
//     switch (page) {
//       case "home":
//         return <HomePage balance={balance} onTap={onTap} tapCount={tapCount} />;
//       case "earn":
//         return <EarnPage />;
//       case "raffles":
//         return <RafflesPage />;
//       case "boosters":
//         return <BoostersPage />;
//       case "profile":
//         return <ProfilePage balance={balance} />;
//       default:
//         return <HomePage />;
//     }
//   };

//   return (
//     <div className="parent-container">
//       <div className="your-content">
//       <div className="p-4 flex-1">{renderPage()}</div>

//       <div className="menu">
//         <button onClick={() => setPage("home")}>üè†</button>
//         <button onClick={() => setPage("earn")}>üíé</button>
//         <button onClick={() => setPage("raffles")}>üéÅ</button>
//         <button onClick={() => setPage("boosters")}>‚ö°</button>
//         <button onClick={() => setPage("profile")}>üë§</button>
//       </div>
//       </div>
//     </div>
//   );
// }
// import { useState } from "react";
// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –≤–∞—à—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
import HomePage from "./pages/HomePage/HomePage";
import EarnPage from "./pages/EarnPage/EarnPage";
import RafflesPage from "./pages/RafflesPage/RafflesPage";
import BoostersPage from "./pages/BoostersPage/BoostersPage";
import ProfilePage from "./pages/ProfilePage/ProfilePage";
import { Routes, Route } from "react-router-dom";
import MainLayout from "../src/components/MainLayout/MainLayout"; // –ù–∞—à –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
// import { useEffect } from "react";
// import { Routes, Route } from 'react-router-dom';
// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è App —Ç–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
// import styles from "./App.module.css";
// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —ñ–∫–æ–Ω–∫–∏
// import { FaHome, FaGem, FaGift, FaBolt, FaUser } from "react-icons/fa";

// export default function App() {
//   // 1. –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å—Ç–µ–π—Ç–∏ –¥–ª—è –±–∞–ª–∞–Ω—Å—É —Ç–∞ –∫–ª—ñ–∫—ñ–≤ –∑ –≤–∞—à–æ–≥–æ –ø–µ—Ä—à–æ–≥–æ —Ñ–∞–π–ª—É
//   const [balance, setBalance] = useState(0);
//   const [tapCount, setTapCount] = useState(0);
//   const [currentPage, setCurrentPage] = useState("home");

//   // 2. –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ª–æ–≥—ñ–∫—É –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –ø—Ä–∏ –∫–ª—ñ–∫—É
//   const onTap = () => {
//     setBalance((prevBalance) => prevBalance + 1);
//     setTapCount((prevTapCount) => prevTapCount + 1);
//   };

//   // 3. –û–Ω–æ–≤–ª—é—î–º–æ —Ä–µ–Ω–¥–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–æ–∫, –ø–µ—Ä–µ–¥–∞—é—á–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø—Ä–æ–ø—Å–∏
//   const renderPage = () => {
//     switch (currentPage) {
//       case "home":
//         // –ü–µ—Ä–µ–¥–∞—î–º–æ –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ –≤ HomePage
//         return <HomePage balance={balance} onTap={onTap} tapCount={tapCount}  />;
//       case "earn":
//         return <EarnPage />;
//       case "raffles":
//         return <RafflesPage />;
//       case "boosters":
//         return <BoostersPage />;
//       case "profile":
//         // –ü–µ—Ä–µ–¥–∞—î–º–æ –±–∞–ª–∞–Ω—Å –≤ ProfilePage
//         return <ProfilePage balance={balance} />;
//       default:
//         return <HomePage balance={balance} onTap={onTap} tapCount={tapCount} />;
//     }
//   };

//   return (
    
//     // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑—ñ —Å—Ç–∏–ª—è–º–∏ CSS Modules
//     <div className={styles.appContainer}>
       
//       {/* –†–µ–Ω–¥–µ—Ä–∏–º–æ –∞–∫—Ç–∏–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É */}
//       <main className={styles.mainContent}>{renderPage()}</main>

//       {/* –í–∞—à–∞ –∫—Ä–∞—Å–∏–≤–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è */}
//       <nav className={styles.bottomNav}>
//         <button
//           className={`${styles.navItem} ${
//             currentPage === "home" ? styles.navItemActive : ""
//           }`}
//           onClick={() => setCurrentPage("home")}
//         >
//           <FaHome />
//           <span>Home</span>
//         </button>
//         <button
//           className={`${styles.navItem} ${
//             currentPage === "earn" ? styles.navItemActive : ""
//           }`}
//           onClick={() => setCurrentPage("earn")}
//         >
//           <FaGem />
//           <span>Earn</span>
//         </button>
//         <button
//           className={`${styles.navItem} ${
//             currentPage === "raffles" ? styles.navItemActive : ""
//           }`}
//           onClick={() => setCurrentPage("raffles")}
//         >
//           <FaGift />
//           <span>Raffles</span>
//         </button>
//         <button
//           className={`${styles.navItem} ${
//             currentPage === "boosters" ? styles.navItemActive : ""
//           }`}
//           onClick={() => setCurrentPage("boosters")}
//         >
//           <FaBolt />
//           <span>Boosters</span>
//         </button>
//         <button
//           className={`${styles.navItem} ${
//             currentPage === "profile" ? styles.navItemActive : ""
//           }`}
//           onClick={() => setCurrentPage("profile")}
//         >
//           <FaUser />
//           <span>Profile</span>
//         </button>
//       </nav>
//     </div>
//   );
// }
export default function App() {
 const tg = window.Telegram.WebApp;
let userData = null;
// –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –±—É–¥–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—é
const authenticate = async () => {
    try {
        // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—å, —â–æ –º–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ Telegram —ñ —î –¥–∞–Ω—ñ
        if (!tg.initData) {
            console.error("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ initData. –î–æ–¥–∞—Ç–æ–∫ –∑–∞–ø—É—â–µ–Ω–æ –Ω–µ —á–µ—Ä–µ–∑ Telegram?");
            // –¢—É—Ç –º–æ–∂–Ω–∞ –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            return;
        }

        console.log("–í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ initData –Ω–∞ –±–µ–∫–µ–Ω–¥:", tg.initData);

        const response = await fetch('https://back-space-clicker.onrender.com/api/auth', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤–µ—Å—å —Ä—è–¥–æ–∫ initData, —è–∫ —ñ –≤–∏–º–∞–≥–∞—î –±–µ–∫–µ–Ω–¥
            body: JSON.stringify({ initData: tg.initData })
        });
        
        if (!response.ok) {
            // –Ø–∫—â–æ —Å–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤ –ø–æ–º–∏–ª–∫—É (–Ω–∞–ø—Ä. 401, 500)
            const errorData = await response.json();
            throw new Error(errorData.message || '–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó');
        }

        userData = await response.json();
        
        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–≤–∫–ª—é—á–Ω–æ –∑ —Ç–æ–∫–µ–Ω–æ–º)
        console.log("‚úÖ –£—Å–ø—ñ—à–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –±–µ–∫–µ–Ω–¥—É:", userData);
        
        // –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–¥–∞–ª—å—à–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
        localStorage.setItem('authToken', userData.token);

    } catch (error) {
        console.error("‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó:", error);
    }
};

// 1. –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ Telegram, —â–æ –Ω–∞—à –¥–æ–¥–∞—Ç–æ–∫ –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏
tg.ready();

// 2. –í–∏–∫–ª–∏–∫–∞—î–º–æ –Ω–∞—à—É —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
authenticate();

  return (
    <Routes>
      {/* –í—Å—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ç–µ–ø–µ—Ä –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ MainLayout */}
      <Route path="/" element={<MainLayout />}>
        {/* "index" –æ–∑–Ω–∞—á–∞—î, —â–æ —Ü–µ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –¥–ª—è "/" */}
        <Route index element={<HomePage />} />
        <Route path="earn" element={<EarnPage />} />
        <Route path="raffles" element={<RafflesPage />} />
        <Route path="boosters" element={<BoostersPage />} />
        <Route path="profile" element={<ProfilePage user={userData} />} />
      </Route>
    </Routes>
  );
}